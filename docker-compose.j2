version: "3.8"
services:
  postgres:
    image: postgres:15.1
    environment: 
      POSTGRES_DB: {{ POSTGRES_DB }}
      POSTGRES_USER: {{ POSTGRES_USER }}
      POSTGRES_PASSWORD: {{ POSTGRES_PASSWORD }}
    volumes:
      - {{ shared_volumes }}/postgresql/data_dir:/var/lib/postgresql/data
      - {{ shared_volumes }}/postgresql/sql:/docker-entrypoint-initdb.d
    networks:
      - traefik-public
    deploy:
      restart_policy:
        condition: on-failure

  keycloak:
    image: {{ registry_url }}:{{ registry_port }}/keycloak
    environment: 
      KEYCLOAK_ADMIN: {{ KEYCLOAK_ADMIN }}
      KEYCLOAK_ADMIN_PASSWORD: {{ KEYCLOAK_ADMIN_PASSWORD }}
      KC_PROXY_ADDRESS_FORWARDING: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME: auth.localdomain
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KC_DB: postgres 
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak 
      KC_DB_USERNAME: {{ KC_DB_USERNAME }}
      KC_DB_PASSWORD: {{ KC_DB_PASSWORD }}
    volumes:
      - {{ shared_volumes }}/keycloak/realm.json:/opt/keycloak/data/import/realm.json
      - {{ nfs_share_path }}/logs/keycloak/keycloak.log:/logs/keycloak.log
    networks:
      - traefik-public  
    deploy:
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.keycloak_route.rule=Host(`auth.localdomain`)"
        - "traefik.http.routers.keycloak_route.service=VCC_stack_keycloak"
        - "traefik.http.routers.keycloak_route.entrypoints=websecure"
        - "traefik.http.routers.keycloak_route.tls=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.keycloak_route.middlewares=VCC_stack_keycloak_proto"
        - "traefik.http.services.VCC_stack_keycloak.loadbalancer.server.port=8080"
        - "traefik.http.middlewares.VCC_stack_keycloak_proto.headers.customrequestheaders.X-Forwarded-Proto=https" 

  nextcloud:
    image: {{ registry_url }}:{{ registry_port }}/nextcloud
    environment: 
      POSTGRES_DB: {{ CLOUD_DB_NAME }}
      POSTGRES_USER: {{ CLOUD_DB_USER }}
      POSTGRES_PASSWORD: {{ CLOUD_DB_PASSWORD }}
      POSTGRES_HOST: postgres
      NEXTCLOUD_ADMIN_USER: {{ NEXTCLOUD_ADMIN_USER }}
      NEXTCLOUD_ADMIN_PASSWORD: {{ NEXTCLOUD_ADMIN_PASSWORD }}
      OIDC_CLIENT_ID: {{ CLOUD_OIDC_CLIENT_ID }} 
      OIDC_CLIENT_SECRET: {{ CLOUD_OIDC_CLIENT_SECRET }}
      OIDC_PROVIDER_URL: https://auth.localdomain/realms/vcc/
      OIDC_LOGOUT_URL: https://cloud.localdomain/apps/oidc_login/oidc
    volumes:
      - {{ nfs_share_path }}/nextcloud:/var/www/html
      - {{ nfs_share_path }}/logs/nextcloud/nextcloud.log:/nextcloud.log
      - {{ nfs_share_path }}/lock:/var/lock
    extra_hosts:
      - "auth.localdomain:{{ traefik_addr }}"
      - "cloud.localdomain:{{ traefik_addr }}"
    networks:
      - traefik-public
    deploy:
      restart_policy:
        condition: on-failure
      mode: replicated
      replicas: 2
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nextcloud_route.rule=Host(`cloud.localdomain`)"
        - "traefik.http.routers.nextcloud_route.entrypoints=websecure"
        - "traefik.http.routers.nextcloud_route.service=VCC_stack_nextcloud"
        - "traefik.http.routers.nextcloud_route.tls=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.nextcloud_route.middlewares=VCC_stack_nextcloud_proto"
        - "traefik.http.services.VCC_stack_nextcloud.loadbalancer.server.port=80"
        - "traefik.http.middlewares.VCC_stack_nextcloud_proto.headers.customrequestheaders.X-Forwarded-Proto=https" 

  traefik:
    image: traefik:v2.9.6
    hostname: traefik
    volumes:
      - {{ shared_volumes }}/traefik:/etc/traefik
      - {{ shared_volumes }}/traefik/certs:/etc/ssl/traefik
      - {{ nfs_share_path }}/logs/traefik:/logs/
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-public
    ports:
      - 80:80
      - 443:443
      - 6880:8080
    deploy:
      placement:
        constraints:
          - node.role == manager

  fluent-bit:
    image: cr.fluentbit.io/fluent/fluent-bit:2.0.6 
    environment:
      LOKI_URL: http://loki:3100/loki/api/v1/push
    networks:
      - traefik-public
    volumes:
      - /volumes/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - {{ shared_volumes }}/fluent-bit/parsers.conf:/parsers.conf
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/log/journal:/run/log/journal:ro
      - /run/systemd/journal:/run/systemd/journal:ro
      - /var/run/systemd/journal:/var/run/systemd/journal:ro
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs:ro
    deploy:
      mode: global
      labels:
        - "prometheus-job=node"

  loki:
    image: grafana/loki:2.7.1
    hostname: loki.hostname
    networks:
      - traefik-public
    volumes:
      - {{ shared_volumes }}/loki/loki.yaml:/etc/loki/local-config.yaml
      - {{ nfs_share_path }}/loki:/loki

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - traefik-public
    deploy:
      mode: global
      labels:
        - "prometheus-job=cadvisor"
    
  prometheus:
    image: prom/prometheus:v2.40.6
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - {{ shared_volumes }}/prometheus:/config
      - {{ nfs_share_path }}/prometheus:/prometheus
    networks:
      - traefik-public
    command:
      - "--config.file=/config/prometheus.yml"
      - "--storage.tsdb.retention.time=7d"
      - "--log.level=info"
    depends_on:
      - cadvisor
    user: 65534:120
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana:9.3.1 
    networks:
      - traefik-public
    volumes:
      - {{ nfs_share_path }}/grafana:/var/lib/grafana
      - {{ shared_volumes }}/grafana/datasources:/etc/grafana/provisioning/datasources
      - {{ shared_volumes }}/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - {{ shared_volumes }}/grafana/dashboards_dir:/var/lib/grafana/dashboards
    environment:
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
      GF_AUTH_GENERIC_OAUTH_SCOPES: openid email profile
      GF_AUTH_GENERIC_OAUTH_NAME: Oauth
      GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE: "true"
      GF_AUTH_GENERIC_OAUTH_API_URL: "http://auth.localdomain/realms/vcc/protocol/openid-connect/userinfo"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.localdomain/realms/vcc/protocol/openid-connect/auth"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "http://auth.localdomain/realms/vcc/protocol/openid-connect/token"     
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "{{ MON_OIDC_CLIENT_ID }}"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "{{ MON_OIDC_CLIENT_SECRET }}"
      GF_AUTH_GENERIC_OAUTH_NAME: "Keycloak"
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(roles[*], 'Admin') && 'Admin' || contains(roles[*], 'Editor') && 'Editor' || 'Viewer'"
      GF_SERVER_DOMAIN: "mon.localdomain"
      GF_SERVER_ROOT_URL: "http://mon.localdomain"
    extra_hosts:
      - "auth.localdomain:{{ traefik_addr }}"
      - "mon.localdomain:{{ traefik_addr }}"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana_route.rule=Host(`mon.localdomain`)"
        - "traefik.http.routers.grafana_route.entrypoints=websecure"
        - "traefik.http.routers.grafana_route.service=VCC_stack_grafana"
        - "traefik.http.routers.grafana_route.tls=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.grafana_route.middlewares=VCC_stack_grafana_proto"
        - "traefik.http.services.VCC_stack_grafana.loadbalancer.server.port=3000"
        - "traefik.http.middlewares.VCC_stack_grafana_proto.headers.customrequestheaders.X-Forwarded-Proto=https"    

networks:
  traefik-public:
    driver: overlay
    name: traefik-public
    attachable: true