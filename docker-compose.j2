version: "3.8"
services:
  postgres:
    image: postgres:15.1
    environment: 
      POSTGRES_DB: {{ POSTGRES_DB_1 }}
      POSTGRES_USER: {{ POSTGRES_USER_1 }}
      POSTGRES_PASSWORD: {{ POSTGRES_PASSWORD_1 }}
    volumes:
      - /data/postgresql/data_dir:/var/lib/postgresql/data
      - /data/postgresql/sql:/docker-entrypoint-initdb.d
    networks:
      - traefik-public
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      - "prometheus-job=postgres"

  keycloak:
    image: 10.255.255.10:5000/keycloak
    environment: 
      KEYCLOAK_ADMIN: {{ KEYCLOAK_ADMIN }}
      KEYCLOAK_ADMIN_PASSWORD: {{ KEYCLOAK_ADMIN_PASSWORD }}
      KC_PROXY_ADDRESS_FORWARDING: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME: auth.localdomain
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KC_DB: postgres 
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak 
      KC_DB_PASSWORD: {{ KC_DB_PASSWORD }} 
      KC_DB_USERNAME: {{ KC_DB_USERNAME }}
    volumes:
      - /data/volumes/keycloak/realm.json:/opt/keycloak/data/import/realm.json
      - /data/logs/keycloak/keycloak.log:/logs/keycloak.log
    networks:
      - traefik-public  
    deploy:
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.keycloak_route.rule=Host(`auth.localdomain`)"
        - "traefik.http.routers.keycloak_route.service=VCC_stack_keycloak"
        - "traefik.http.routers.keycloak_route.entrypoints=websecure"
        - "traefik.http.routers.keycloak_route.tls=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.keycloak_route.middlewares=VCC_stack_keycloak_proto"
        - "traefik.http.services.VCC_stack_keycloak.loadbalancer.server.port=8080"
        - "traefik.http.middlewares.VCC_stack_keycloak_proto.headers.customrequestheaders.X-Forwarded-Proto=https" 
        - "prometheus-job=keycloak"

  nextcloud:
    image: 10.255.255.10:5000/nextcloud
    environment: 
      POSTGRES_DB: {{ POSTGRES_DB_2 }}
      POSTGRES_USER: {{ POSTGRES_USER_2 }}
      POSTGRES_PASSWORD: {{ POSTGRES_PASSWORD_2 }}
      POSTGRES_HOST: postgres
      NEXTCLOUD_ADMIN_USER: {{ NEXTCLOUD_ADMIN_USER }}
      NEXTCLOUD_ADMIN_PASSWORD: {{ NEXTCLOUD_ADMIN_PASSWORD }}
    volumes:
      - /data/nextcloud:/var/www/html
      - /data/logs/nextcloud/nextcloud.log:/nextcloud.log
    extra_hosts:
      - "auth.localdomain:192.168.50.10"
      - "cloud.localdomain:192.168.50.10"
    networks:
      - traefik-public
    deploy:
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nextcloud_route.rule=Host(`cloud.localdomain`)"
        - "traefik.http.routers.nextcloud_route.entrypoints=websecure"
        - "traefik.http.routers.nextcloud_route.service=VCC_stack_nextcloud"
        - "traefik.http.routers.nextcloud_route.tls=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.nextcloud_route.middlewares=VCC_stack_nextcloud_proto"
        - "traefik.http.services.VCC_stack_nextcloud.loadbalancer.server.port=80"
        - "traefik.http.middlewares.VCC_stack_nextcloud_proto.headers.customrequestheaders.X-Forwarded-Proto=https" 
        - "prometheus-job=nextcloud"
  
  reverse-proxy-https-init:
    image: 10.255.255.10:5000/rev-proxy
    environment: 
     SSL_CN: "*.local"
     SSL_O: "VCC"
     SSL_C: "IT"
     SSL_DAYS: 3650
    volumes:
      - /data/certs:/etc/ssl/traefik
      - /data/traefik:/etc/traefik/dynamic
    networks:
      - traefik-public
    deploy:
      restart_policy:
        condition: none
      labels:
        - "prometheus-job=rev-proxy"

  traefik:
    image: traefik:v2.9.6
    hostname: traefik
    volumes:
      - /data/certs:/etc/ssl/traefik
      - /data/traefik:/etc/traefik/dynamic
      - /data/logs/traefik:/logs/
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-public
    ports:
      # HTTP port
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      #  Web UI (enabled by --api.insecure=true)
      - 6880:8080
    depends_on:
      - reverse-proxy-https-init
    command:
    # enable Web UI
      - --api.insecure=true
      # set provider (Docker Swarm)
      - --providers.docker
      - --providers.docker.swarmMode=true
      - --providers.docker.network=VCC_stack_default
      # traefik http entrypoint port
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      # add x-forwaded-for
      - --entrypoints.web.forwardedHeaders.insecure=true
      # manually enable services exposed by traefik
      - --providers.docker.exposedByDefault=false
      - "--log.filePath=/logs/traefik.log"
      - --accesslog=true
      - "--accesslog.filePath=/logs/access.log"
      - --log.level=DEBUG
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "prometheus-job=traefik"

  fluent-bit:
    image: cr.fluentbit.io/fluent/fluent-bit:2.0.6 
    environment:
      LOKI_URL: http://loki:3100/loki/api/v1/push
    networks:
      - traefik-public
    volumes:
      - /volumes/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - /data/volumes/fluent-bit/parsers.conf:/parsers.conf
      - /var/lib/docker/containers:/var/lib/docker/containers
    deploy:
      mode: global
      labels:
        - "prometheus-job=fluent-bit"

  loki:
    image: grafana/loki:2.7.1
    hostname: loki.hostname
    networks:
      - traefik-public
    volumes:
      - /data/volumes/loki/loki.yaml:/etc/loki/local-config.yaml
      - /data/loki:/loki
    deploy:
      labels:
        - "prometheus-job=loki"

  prometheus:
    image: prom/prometheus:v2.40.6
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /data/volumes/prometheus:/config
      - /data/prometheus:/prometheus
    networks:
      - traefik-public
    command:
      - "--config.file=/config/prometheus.yml"
      - "--storage.tsdb.retention.time=7d"
      - "--log.level=debug"

  grafana:
    image: grafana/grafana:9.3.1
    networks:
      - traefik-public
    volumes:
      - /data/grafana:/var/lib/grafana
      - /data/volumes/grafana:/etc/grafana/provisioning/datasources
    environment:
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
      GF_AUTH_GENERIC_OAUTH_SCOPES: openid email profile
      GF_AUTH_GENERIC_OAUTH_NAME: Oauth
      GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE: "true"
      GF_AUTH_GENERIC_OAUTH_API_URL: "http://auth.localdomain/realms/vcc/protocol/openid-connect/userinfo"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.localdomain/realms/vcc/protocol/openid-connect/auth"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "http://auth.localdomain/realms/vcc/protocol/openid-connect/token"     
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "grafana"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "pippopippo"
      GF_AUTH_GENERIC_OAUTH_NAME: "Keycloak"
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(roles[*], 'Admin') && 'Admin' || contains(roles[*], 'Editor') && 'Editor' || 'Viewer'"
      GF_SERVER_DOMAIN: "mon.localdomain"
      GF_SERVER_ROOT_URL: "http://mon.localdomain"
    extra_hosts:
      - "auth.localdomain:192.168.50.10"
      - "mon.localdomain:192.168.50.10"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana_route.rule=Host(`mon.localdomain`)"
        - "traefik.http.routers.grafana_route.entrypoints=websecure"
        - "traefik.http.routers.grafana_route.service=VCC_stack_grafana"
        - "traefik.http.routers.grafana_route.tls=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.grafana_route.middlewares=VCC_stack_grafana_proto"
        - "traefik.http.services.VCC_stack_grafana.loadbalancer.server.port=3000"
        - "traefik.http.middlewares.VCC_stack_grafana_proto.headers.customrequestheaders.X-Forwarded-Proto=https"    
        - "prometheus-job=grafana"

networks:
  traefik-public:
    driver: overlay
    name: traefik-public
    attachable: true