version: "3.8"
services:
  postgres:
    image: postgres:15.1
    environment: 
      POSTGRES_DB: vcc-test
      POSTGRES_USER: vcc-test
      POSTGRES_PASSWORD: vcc-test
    volumes:
      - /data/postgresql/data_dir:/var/lib/postgresql/data
      - /data/postgresql/sql:/docker-entrypoint-initdb.d
    networks:
      - traefik-public
    deploy:
      mode: replicated
      # placement:
      #   constraints:
      #     - "node.role==manager"
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
     - target: 5432
       published: 5432
       # mode: host

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.1
    #container_name: VCC_stack_keycloak
    command: 
      - start-dev
      - --log-level=debug
      - --log=console,file
      - --log-file=/logs/keycloak.log
      - --hostname=auth.localdomain
      #- --port=8080
      #- --proxy=edge
      #- --http-relative-path=/auth
      - --hostname-strict-https=false
    environment: 
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY_ADDRESS_FORWARDING: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME: auth.localdomain
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KC_DB: postgres 
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak 
      KC_DB_PASSWORD: keycloak 
      KC_DB_USERNAME: keycloak
    depends_on:
      - postgres
    volumes:
      - /data/logs/keycloak/keycloak.log:/logs/keycloak.log
    networks:
      - traefik-public  
    # ports:
    #   - target: 8080
    #     published: 8080
    #     mode: host
    deploy:
      mode: replicated
      # placement:
      #   constraints:
      #     - "node.role==manager"
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.keycloak_route.rule=Host(`auth.localdomain`)"
        - "traefik.http.routers.keycloak_route.service=VCC_stack_keycloak"
        - "traefik.http.routers.keycloak_route.entrypoints=websecure"
        - "traefik.http.routers.keycloak_route.tls=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.keycloak_route.middlewares=VCC_stack_keycloak_proto"
        - "traefik.http.services.VCC_stack_keycloak.loadbalancer.server.port=8080"
        - "traefik.http.middlewares.VCC_stack_keycloak_proto.headers.customrequestheaders.X-Forwarded-Proto=https"
        #- "traefik.http.middlewares.VCC_stack_keycloak_proto.headers.customrequestheaders.X-Forwarded-For=192.168.50.1"
        #- "traefik.http.middlewares.VCC_stack_keycloak_proto.headers.customrequestheaders.X-Forwarded-Host=auth.localdomain"  

  nextcloud:
    image: nextcloud:23.0-apache
    environment: 
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: nextcloud
      POSTGRES_HOST: postgres
      NEXTCLOUD_ADMIN_USER: admin
      NEXTCLOUD_ADMIN_PASSWORD: admin
    volumes:
      - /data/nextcloud:/var/www/html
      - /data/logs/nextcloud/nextcloud.log:/nextcloud.log
    depends_on:
      - postgres 
    networks:
      - traefik-public
    # ports:
    #   - target: 80
    #     published: 80
    #     mode: host
    deploy:
      mode: replicated
      # placement:
      #   constraints:
      #     - "node.role==manager"
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nextcloud_route.rule=Host(`cloud.localdomain`)"
        - "traefik.http.routers.nextcloud_route.entrypoints=websecure"
        - "traefik.http.routers.nextcloud_route.service=VCC_stack_nextcloud"
        - "traefik.http.routers.nextcloud_route.tls=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.nextcloud_route.middlewares=VCC_stack_nextcloud_proto"
        - "traefik.http.services.VCC_stack_nextcloud.loadbalancer.server.port=80"
        - "traefik.http.middlewares.VCC_stack_nextcloud_proto.headers.customrequestheaders.X-Forwarded-Proto=https" 

  integrator:
    image: 10.255.255.10:5000/integrator
    environment: 
      NEXTCLOUD_CONTAINER_NAME: VCC_stack_nextcloud
      KEYCLOAK_CONTAINER_NAME: VCC_stack_keycloak
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      SAMPLE_USER_PASSWORD: itsdifficult
      OIDC_CLIENT_ID: nextcloud 
      OIDC_PROVIDER_URL: https://auth.localdomain/realms/vcc/
      OIDC_LOGOUT_URL: https://auth.localdomain/apps/oidc_login/oidc
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - keycloak
      - nextcloud 
    networks:
      - traefik-public
    deploy:
      mode: replicated
      placement:
        constraints:
          - "node.role==manager"
      replicas: 1
      restart_policy:
        condition: on-failure

  reverse-proxy-https-init:
    image: 10.255.255.10:5000/rev-proxy
    environment: 
     SSL_CN: "*.local"
     SSL_O: "VCC"
     SSL_C: "IT"
     SSL_DAYS: 3650
    volumes:
      - /data/certs:/etc/ssl/traefik
      - /data/traefik:/etc/traefik/dynamic
    networks:
      - traefik-public
    deploy:
      restart_policy:
        condition: none
      mode: replicated
      replicas: 1  

  traefik:
    image: traefik:v2.9.6
    hostname: traefik
    volumes:
      - /data/certs:/etc/ssl/traefik
      - /data/traefik:/etc/traefik/dynamic
      - /data/logs/traefik:/logs/
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-public
    ports:
      # HTTP port
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      #- 80:80
      - 6880:8080
      #  Web UI (enabled by --api.insecure=true)
    depends_on:
      - reverse-proxy-https-init
      - integrator  
    command:
    # enable Web UI
      - --api.insecure=true
      # set provider (Docker Swarm)
      - --providers.docker
      - --providers.docker.swarmMode=true
      - --providers.docker.network=VCC_stack_default
      # traefik http entrypoint port
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      # add x-forwaded-for
      - --entrypoints.web.forwardedHeaders.insecure=true
      # manually enable services exposed by traefik
      - --providers.docker.exposedByDefault=false
      - "--log.filePath=/logs/traefik.log"
      - --accesslog=true
      - "--accesslog.filePath=/logs/access.log"
      - --log.level=DEBUG
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

networks:
  traefik-public:
    driver: overlay
    name: traefik-public
    attachable: true