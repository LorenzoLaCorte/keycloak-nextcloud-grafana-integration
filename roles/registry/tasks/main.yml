---
- name: Create certificates directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ certs_dir }}"
    - "{{ data_dir }}"
    - "{{ data_cache_dir }}"

- name: Create private key (RSA, 4096 bits)
  community.crypto.openssl_privatekey:
    path: "{{ certs_dir }}/privkey.pem"

- name: Generate an OpenSSL CSR.
  openssl_csr:
    path: "{{ certs_dir }}/domain.csr"
    privatekey_path: "{{ certs_dir }}/privkey.pem"
    common_name: myregistry.domain.com
    subject_alt_name: "IP:{{ registry_url }}" 

- name: Generate a Self Signed OpenSSL certificate.
  openssl_certificate:
    path: "{{ certs_dir }}/fullchain.pem"
    privatekey_path: "{{ certs_dir }}/privkey.pem"
    csr_path: "{{ certs_dir }}/domain.csr"
    provider: selfsigned

- name: Copy certificate into ca-certificates dir
  ansible.builtin.copy:
    src: "{{ certs_dir }}/fullchain.pem"
    dest: /usr/local/share/ca-certificates/domain.crt  # link to /path/to/file
    follow: yes
    remote_src: true

- name: Update cert index
  shell: /usr/sbin/update-ca-certificates

- name: Restart Docker service
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: docker     

- name: Create htpasswd file
  ansible.builtin.file:
    path: "{{ registry_htpasswd_file }}"
    state: touch
    mode: '0755'

- name: Insert passwords in htpasswd file
  community.general.htpasswd:
    path: "{{ registry_htpasswd_file }}"
    name: "{{ REGISTRY_USER }}"
    password: "{{ REGISTRY_PASS }}"
    crypt_scheme: bcrypt

- name: Deploy Registry
  community.docker.docker_swarm_service:
    name: registry
    image: distribution/distribution:2.8.1
    placement:
      constraints:
        - node.role == manager
    publish:
      - published_port: "{{ registry_port }}"
        target_port: "{{ registry_port }}"
        mode: "host"  
    mounts:
      - source: "{{ shared_volumes }}/registry/config.yml"
        target: /etc/docker/registry/config.yml
        type: bind
      - source: "{{ data_dir }}"
        target: /docker-registry
        type: bind
      - source: "{{ certs_dir }}"
        target: /certs
        type: bind

- name: Deploy Registry cache
  community.docker.docker_swarm_service:
    name: registry-cache
    image: distribution/distribution:2.8.1
    placement:
      constraints:
        - node.role == manager
    publish:
      - published_port: 5001
        target_port: 5001
        mode: host
    mounts:
      - source: "{{ shared_volumes }}/registry/config-cache.yml"
        target: /etc/docker/registry/config.yml
        type: bind
      - source: "{{ data_cache_dir }}"
        target: /docker-registry
        type: bind
      - source: "{{ certs_dir }}"
        target: /certs
        type: bind