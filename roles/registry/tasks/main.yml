---
- name: Create certificates directory if it does not exist
  ansible.builtin.file:
    path: "{{ certs_dir }}"
    state: directory
    mode: '0755'

#- name: Create SSL certificate
#  openssl_certificate:
#    path: "{{ certs_dir }}/key.crt"
#    privatekey_path: "{{ certs_dir }}/key.key" 
#    provider: selfsigned

- name: Create private key (RSA, 4096 bits)
  community.crypto.openssl_privatekey:
    path: "{{ certs_dir }}/key.key"

#- name: Create simple self-signed certificate
#  community.crypto.x509_certificate:
#    path: "{{ certs_dir }}/key.crt"
#    privatekey_path: "{{ certs_dir }}/key.key"
#    provider: selfsigned 

- name: Create simple self-signed certificate
  community.crypto.openssl_csr:
    path: "{{ certs_dir }}/key.crt"
    privatekey_path: "{{ certs_dir }}/key.key"
    subject_alt_name: "DNS:myregistry.domain.com"     

- name: Deploy Registry
  community.docker.docker_swarm_service:
    name: registry
    image: distribution/distribution:2.8.1
    placement:
      constraints:
        - node.role == manager
    publish:
      - published_port: 8080
        target_port: 443
    env:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: "{{ data_dir }}"
      REGISTRY_HTTP_TLS_CERTIFICATE: "{{ certs_dir }}/key.crt"
      REGISTRY_HTTP_TLS_KEY: "{{ certs_dir }}/key.key"  

#- name: Deploy Registry
#  community.docker.docker_container:
#    name: registry
#    image: distribution/distribution:2.8.1
#    ports:
#      - 5001:5001
#    volumes:
#      - /data/docker-registry:/var/lib/registry
#      - /data/certs:/certs
#    env:
#      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.pem
#      REGISTRY_HTTP_TLS_KEY: /certs/domain.key